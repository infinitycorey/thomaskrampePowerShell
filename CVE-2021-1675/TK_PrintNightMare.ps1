<#
 .SYNOPSIS
        Workaround for PrintNightmare CVE-2021-34527 
 .DESCRIPTION
        Use an ACL to prevent malicious DLLs to be introduced by the print spooler
 .PARAMETER mode
        secure or unsecure C:\Windows\System32\spool\drivers
.PARAMETER serverlist
        Path and filename to the server list text file (one server per line)
        eg. C:\temp\serverlist.txt
 .EXAMPLE
        TK_PrintNightMare.ps1 -mode secure -ServerList "C:\temp\serverlist.txt"
        TK_PrintNightMare.ps1 -mode unsecure "C:\temp\serverlist.txt"
 .LINK
        https://github.com/thomaskrampe/
                 
 .NOTES
        Author        : Thomas Krampe | t.krampe@loginconsultants.de
        Version       : 0.1
        Creation date : 01.07.2021 | v0.1 | Initial script
                      : 02.07.2021 | v1.0 | Release to GitHub
        Last change   : 02.07.2021 | v1.1 | add run on remote machines (Thanks C.Wallner)
#>

Param(
    [Parameter(Mandatory=$True)][ValidateSet("secure", "unsecure", "check")][string]$Mode,
    [Parameter(Mandatory=$True)][string]$ServerList
)

$FileExists = Test-Path $ServerList

If ($FileExists -eq $False) {
    Write-Host "Server List file doesn't exist. Please provide a valid server list file." -ForegroundColor "Red"
    Exit 9
}


$Servers = @(get-content  -Path $ServerList) 

switch ($Mode){
    "secure" {
        ForEach ($Server in $Servers) {
            If(!(Test-Connection -Cn $Server -BufferSize 16 -Count 1 -ea 0 -quiet)){
                Write-Host "$Server offline, skipping." -ForegroundColor "Magenta"
                continue
            } else {
                Write-Host "Activate PrintNightmare workaround on $Server" -ForegroundColor "Green"
                Invoke-Command -Computername $Server -ScriptBlock {
                    $Path = "C:\Windows\System32\spool\drivers"
                    $Acl = Get-Acl $Path
                    # The Hard way
                    $dRule = New-Object  System.Security.AccessControl.FileSystemAccessRule("System", "Modify", "ContainerInherit, ObjectInherit", "None", "Deny")
                    # The Soft way not sure if it's enough
                    # $dRule = New-Object  System.Security.AccessControl.FileSystemAccessRule("System", "Write", "ContainerInherit, ObjectInherit", "None", "Deny")
                    $Acl.AddAccessRule($dRule)
                    Set-Acl $Path $Acl
                }
            }
        }
        break
    }
    "unsecure" {
        ForEach ($Server in $Servers) {
            If(!(Test-Connection -Cn $Server -BufferSize 16 -Count 1 -ea 0 -quiet)){
                Write-Host "$Server offline, skipping." -ForegroundColor "Magenta"
                continue
            } else {
                Write-Host "Deactivate PrintNightmare workaround on $Server" -ForegroundColor "Green"
                Invoke-Command -Computername $Server -ScriptBlock {
                    $Path = "C:\Windows\System32\spool\drivers"
                    $Acl = Get-Acl $Path
                    # The Hard way
                    $aRule = New-Object  System.Security.AccessControl.FileSystemAccessRule("System", "Modify", "ContainerInherit, ObjectInherit", "None", "Deny")
                    # The Soft way not sure if it's enough
                    # $aRule = New-Object  System.Security.AccessControl.FileSystemAccessRule("System", "Write", "ContainerInherit, ObjectInherit", "None", "Deny")
                    $Acl.RemoveAccessRule($aRule)
                    Set-Acl $Path $Acl
                }
            }
        }
        break
    }        
}
